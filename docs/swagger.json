{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a products' prices getting, filtering and monitoring.",
        "title": "Price Service API",
        "contact": {
            "name": "API Support",
            "email": "maksimacx50@gmail.com"
        },
        "license": {
            "name": "Unlicense",
            "url": "https://unlicense.org/"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/products/filter/markets": {
            "get": {
                "description": "this endpoint provides filtering products from marketplaces without any specified filtration.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common-Filter"
                ],
                "summary": "common filtering",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the exact query string",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "enum": [
                                "wildberries",
                                "megamarket"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the list of the markets using for search",
                        "name": "markets",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "the num of products' sample",
                        "name": "sample",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "pricedown",
                            "priceup",
                            "newly"
                        ],
                        "type": "string",
                        "default": "popular",
                        "description": "the type of products' sample sorting",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "the flag that defines 'do image links need to be parsed?'",
                        "name": "no-image",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "min",
                            "max"
                        ],
                        "type": "string",
                        "default": "min",
                        "description": "the amount of the products in response's sample",
                        "name": "amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chttp.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    }
                }
            }
        },
        "/products/filter/price/best-price": {
            "get": {
                "description": "this endpoint provides filtering products from marketplaces by the best and minimum price",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Price-Filter"
                ],
                "summary": "best price filtering",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the exact query string",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "enum": [
                                "wildberries",
                                "megamarket"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the list of the markets using for search",
                        "name": "markets",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "the num of products' sample",
                        "name": "sample",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "pricedown",
                            "priceup",
                            "newly"
                        ],
                        "type": "string",
                        "default": "popular",
                        "description": "the type of products' sample sorting",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "the flag that defines 'do image links need to be parsed?'",
                        "name": "no-image",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "min",
                            "max"
                        ],
                        "type": "string",
                        "default": "min",
                        "description": "the amount of the products in response's sample",
                        "name": "amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chttp.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    }
                }
            }
        },
        "/products/filter/price/exact-price": {
            "get": {
                "description": "this endpoint provides filtering products from marketplaces in range (exact-price, exact-price * 1.05 (+5%))",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Price-Filter"
                ],
                "summary": "exact filtering",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the exact query string",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "the value of exact price",
                        "name": "price",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "enum": [
                                "wildberries",
                                "megamarket"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the list of the markets using for search",
                        "name": "markets",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "the num of products' sample",
                        "name": "sample",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "pricedown",
                            "priceup",
                            "newly"
                        ],
                        "type": "string",
                        "default": "popular",
                        "description": "the type of products' sample sorting",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "the flag that defines 'do image links need to be parsed?'",
                        "name": "no-image",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "min",
                            "max"
                        ],
                        "type": "string",
                        "default": "min",
                        "description": "the amount of the products in response's sample",
                        "name": "amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chttp.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    }
                }
            }
        },
        "/products/filter/price/price-range": {
            "get": {
                "description": "this endpoint provides filtering products from marketplaces by a specified price range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Price-Filter"
                ],
                "summary": "price range filtering",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the exact query string",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "description": "the price range's lower bound",
                        "name": "price_down",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "the price range's upper bound",
                        "name": "price_up",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minLength": 1,
                        "type": "array",
                        "items": {
                            "enum": [
                                "wildberries",
                                "megamarket"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "ssv",
                        "description": "the list of the markets using for search",
                        "name": "markets",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "the num of products' sample",
                        "name": "sample",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "popular",
                            "pricedown",
                            "priceup",
                            "newly"
                        ],
                        "type": "string",
                        "default": "popular",
                        "description": "the type of products' sample sorting",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "integer",
                        "default": 1,
                        "description": "the flag that defines 'do image links need to be parsed?'",
                        "name": "no-image",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "min",
                            "max"
                        ],
                        "type": "string",
                        "default": "min",
                        "description": "the amount of the products in response's sample",
                        "name": "amount",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chttp.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/chttp.ResponseErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chttp.ProductResponse": {
            "type": "object",
            "properties": {
                "samples": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/entities.ProductSample"
                    }
                }
            }
        },
        "chttp.ResponseErr": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "entities.Currency": {
            "type": "string",
            "enum": [
                "rub"
            ],
            "x-enum-varnames": [
                "RUB"
            ]
        },
        "entities.Price": {
            "type": "object",
            "properties": {
                "base_price": {
                    "type": "integer"
                },
                "discount": {
                    "type": "integer"
                },
                "discount_price": {
                    "type": "integer"
                }
            }
        },
        "entities.Product": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "$ref": "#/definitions/entities.Price"
                },
                "related_links": {
                    "$ref": "#/definitions/entities.ProductLink"
                },
                "supplier": {
                    "type": "string"
                }
            }
        },
        "entities.ProductLink": {
            "type": "object",
            "properties": {
                "image_link": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entities.ProductSample": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/definitions/entities.Currency"
                },
                "main_products_sample": {
                    "type": "string"
                },
                "market": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Product"
                    }
                }
            }
        }
    }
}